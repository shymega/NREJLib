package com.thalesgroup.rtti._2017_10_01.ldbsv;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import com.thalesgroup.rtti._2015_05_14.ldbsv_ref.LDBSVRefServiceSoap;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2020-05-24T15:42:24.743+01:00
 * Generated source version: 3.3.5
 *
 */
@WebServiceClient(name = "ldbsv",
                  wsdlLocation = "https://lite.realtime.nationalrail.co.uk/OpenLDBSVWS/wsdl.aspx?refver=2015-05-14",
                  targetNamespace = "http://thalesgroup.com/RTTI/2017-10-01/ldbsv/")
public class Ldbsv extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://thalesgroup.com/RTTI/2017-10-01/ldbsv/", "ldbsv");
    public final static QName LDBSVServiceSoap = new QName("http://thalesgroup.com/RTTI/2017-10-01/ldbsv/", "LDBSVServiceSoap");
    public final static QName LDBSVServiceSoap12 = new QName("http://thalesgroup.com/RTTI/2017-10-01/ldbsv/", "LDBSVServiceSoap12");
    public final static QName LDBSVRefServiceSoap = new QName("http://thalesgroup.com/RTTI/2017-10-01/ldbsv/", "LDBSVRefServiceSoap");
    public final static QName LDBSVRefServiceSoap12 = new QName("http://thalesgroup.com/RTTI/2017-10-01/ldbsv/", "LDBSVRefServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("https://lite.realtime.nationalrail.co.uk/OpenLDBSVWS/wsdl.aspx?refver=2015-05-14");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Ldbsv.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://lite.realtime.nationalrail.co.uk/OpenLDBSVWS/wsdl.aspx?refver=2015-05-14");
        }
        WSDL_LOCATION = url;
    }

    public Ldbsv(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Ldbsv(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Ldbsv() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Ldbsv(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Ldbsv(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Ldbsv(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns LDBSVServiceSoap
     */
    @WebEndpoint(name = "LDBSVServiceSoap")
    public LDBSVServiceSoap getLDBSVServiceSoap() {
        return super.getPort(LDBSVServiceSoap, LDBSVServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LDBSVServiceSoap
     */
    @WebEndpoint(name = "LDBSVServiceSoap")
    public LDBSVServiceSoap getLDBSVServiceSoap(WebServiceFeature... features) {
        return super.getPort(LDBSVServiceSoap, LDBSVServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns LDBSVServiceSoap
     */
    @WebEndpoint(name = "LDBSVServiceSoap12")
    public LDBSVServiceSoap getLDBSVServiceSoap12() {
        return super.getPort(LDBSVServiceSoap12, LDBSVServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LDBSVServiceSoap
     */
    @WebEndpoint(name = "LDBSVServiceSoap12")
    public LDBSVServiceSoap getLDBSVServiceSoap12(WebServiceFeature... features) {
        return super.getPort(LDBSVServiceSoap12, LDBSVServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns LDBSVRefServiceSoap
     */
    @WebEndpoint(name = "LDBSVRefServiceSoap")
    public LDBSVRefServiceSoap getLDBSVRefServiceSoap() {
        return super.getPort(LDBSVRefServiceSoap, LDBSVRefServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LDBSVRefServiceSoap
     */
    @WebEndpoint(name = "LDBSVRefServiceSoap")
    public LDBSVRefServiceSoap getLDBSVRefServiceSoap(WebServiceFeature... features) {
        return super.getPort(LDBSVRefServiceSoap, LDBSVRefServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns LDBSVRefServiceSoap
     */
    @WebEndpoint(name = "LDBSVRefServiceSoap12")
    public LDBSVRefServiceSoap getLDBSVRefServiceSoap12() {
        return super.getPort(LDBSVRefServiceSoap12, LDBSVRefServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LDBSVRefServiceSoap
     */
    @WebEndpoint(name = "LDBSVRefServiceSoap12")
    public LDBSVRefServiceSoap getLDBSVRefServiceSoap12(WebServiceFeature... features) {
        return super.getPort(LDBSVRefServiceSoap12, LDBSVRefServiceSoap.class, features);
    }

}
